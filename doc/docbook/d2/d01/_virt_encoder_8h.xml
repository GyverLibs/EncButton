<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__virt_encoder_8h" xml:lang="en-US">
<title>src/core/VirtEncoder.h File Reference</title>
<indexterm><primary>src/core/VirtEncoder.h</primary></indexterm>
<para>

<para>Virtual encoder class. </para>
 
</para>
<programlisting linenumbering="unnumbered">#include &lt;Arduino.h&gt;<?linebreak?>#include &quot;utils.h&quot;<?linebreak?></programlisting><simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>class <link linkend="_class_virt_encoder">VirtEncoder</link></para>

<para>A class representing a virtual encoder. This class provides methods to set the encoder&apos;s properties, attach_call callback functions for handling encoder events, and poll the encoder for rotation and direction. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="__virt_encoder_8h_1aeb2be3bd32d8e97a7d1cdd912896e414">EB_STEP4_LOW</link>&#160;&#160;&#160;0</para>
</listitem>
            <listitem><para>#define <link linkend="__virt_encoder_8h_1ac884883a546362d9ecce60cba2590128">EB_STEP4_HIGH</link>&#160;&#160;&#160;1</para>
</listitem>
            <listitem><para>#define <link linkend="__virt_encoder_8h_1a8f1e0ffc5b198284f3e41bb44819b4f4">EB_STEP2</link>&#160;&#160;&#160;2</para>
</listitem>
            <listitem><para>#define <link linkend="__virt_encoder_8h_1ab5c622eaea29916b55c4b2f8023cbbe3">EB_STEP1</link>&#160;&#160;&#160;3</para>
</listitem>
            <listitem><para>#define <link linkend="__virt_encoder_8h_1a1ce8742512126ac149fbf10fe9470179">ENC_FLAGS</link></para>
</listitem>
            <listitem><para>#define <link linkend="__virt_encoder_8h_1a8a0d2d602acb24d74237c3f310e935cd">X</link>(a,  b)&#160;&#160;&#160;a = (1 &lt;&lt; b),</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Enumerations    </title>
        <itemizedlist>
            <listitem><para>enum <link linkend="__virt_encoder_8h_1ac38c7efc1dd08c024ddfe9a95c0be668">ENC_FLAG_T</link> { <link linkend="__virt_encoder_8h_1ac38c7efc1dd08c024ddfe9a95c0be668a1a93281d355333e187e376ea04b25e92">ENC_FLAGS</link>
 }</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Virtual encoder class. </para>
<para>
Definition in file <link linkend="__virt_encoder_8h_source">VirtEncoder.h</link>.</para>
</section>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="__virt_encoder_8h_1ab5c622eaea29916b55c4b2f8023cbbe3"/><section>
    <title>EB_STEP1</title>
<indexterm><primary>EB_STEP1</primary><secondary>VirtEncoder.h</secondary></indexterm>
<indexterm><primary>VirtEncoder.h</primary><secondary>EB_STEP1</secondary></indexterm>
<para><computeroutput>#define EB_STEP1&#160;&#160;&#160;3</computeroutput></para><para>
Definition at line <link linkend="__virt_encoder_8h_source_1l00017">17</link> of file <link linkend="__virt_encoder_8h_source">VirtEncoder.h</link>.</para>
</section>
<anchor xml:id="__virt_encoder_8h_1a8f1e0ffc5b198284f3e41bb44819b4f4"/><section>
    <title>EB_STEP2</title>
<indexterm><primary>EB_STEP2</primary><secondary>VirtEncoder.h</secondary></indexterm>
<indexterm><primary>VirtEncoder.h</primary><secondary>EB_STEP2</secondary></indexterm>
<para><computeroutput>#define EB_STEP2&#160;&#160;&#160;2</computeroutput></para><para>
Definition at line <link linkend="__virt_encoder_8h_source_1l00016">16</link> of file <link linkend="__virt_encoder_8h_source">VirtEncoder.h</link>.</para>
</section>
<anchor xml:id="__virt_encoder_8h_1ac884883a546362d9ecce60cba2590128"/><section>
    <title>EB_STEP4_HIGH</title>
<indexterm><primary>EB_STEP4_HIGH</primary><secondary>VirtEncoder.h</secondary></indexterm>
<indexterm><primary>VirtEncoder.h</primary><secondary>EB_STEP4_HIGH</secondary></indexterm>
<para><computeroutput>#define EB_STEP4_HIGH&#160;&#160;&#160;1</computeroutput></para><para>
Definition at line <link linkend="__virt_encoder_8h_source_1l00015">15</link> of file <link linkend="__virt_encoder_8h_source">VirtEncoder.h</link>.</para>
</section>
<anchor xml:id="__virt_encoder_8h_1aeb2be3bd32d8e97a7d1cdd912896e414"/><section>
    <title>EB_STEP4_LOW</title>
<indexterm><primary>EB_STEP4_LOW</primary><secondary>VirtEncoder.h</secondary></indexterm>
<indexterm><primary>VirtEncoder.h</primary><secondary>EB_STEP4_LOW</secondary></indexterm>
<para><computeroutput>#define EB_STEP4_LOW&#160;&#160;&#160;0</computeroutput></para><para>
Definition at line <link linkend="__virt_encoder_8h_source_1l00014">14</link> of file <link linkend="__virt_encoder_8h_source">VirtEncoder.h</link>.</para>
</section>
<anchor xml:id="__virt_encoder_8h_1a1ce8742512126ac149fbf10fe9470179"/><section>
    <title>ENC_FLAGS</title>
<indexterm><primary>ENC_FLAGS</primary><secondary>VirtEncoder.h</secondary></indexterm>
<indexterm><primary>VirtEncoder.h</primary><secondary>ENC_FLAGS</secondary></indexterm>
<para><computeroutput>#define ENC_FLAGS</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<link linkend="__virt_encoder_8h_1a8a0d2d602acb24d74237c3f310e935cd">X</link>(E_TYPE,&#32;&#32;&#32;&#32;0)\
&#32;&#32;&#32;&#32;X(E_REVERSE,&#32;2)\
&#32;&#32;&#32;&#32;X(E_FAST,&#32;&#32;&#32;&#32;3)\
&#32;&#32;&#32;&#32;X(E_DIR,&#32;&#32;&#32;&#32;&#32;4)\
&#32;&#32;&#32;&#32;X(E_TRN_R,&#32;&#32;&#32;5)\
&#32;&#32;&#32;&#32;X(E_ISR_F,&#32;&#32;&#32;6)\
&#32;&#32;&#32;&#32;X(E_ISR,&#32;&#32;&#32;&#32;&#32;7)
</programlisting><para>
Definition at line <link linkend="__virt_encoder_8h_source_1l00019">19</link> of file <link linkend="__virt_encoder_8h_source">VirtEncoder.h</link>.</para>
<programlisting linenumbering="unnumbered">00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00031 &#32;&#32;&#32;&#32;<link linkend="__virt_encoder_8h_1a1ce8742512126ac149fbf10fe9470179">ENC_FLAGS</link>
00032 }&#32;<link linkend="__virt_encoder_8h_1ac38c7efc1dd08c024ddfe9a95c0be668">ENC_FLAG_T</link>;
00033 <emphasis role="preprocessor">#undef&#32;X&#x240D;</emphasis>
00034 
00042 <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_virt_encoder">VirtEncoder</link>&#32;{
00043 &#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
00044 &#32;&#32;&#32;
00048 &#32;&#32;&#32;&#32;<link linkend="_class_virt_encoder_1ab0ba73852e308a8e365ef438f0cdc0b0">VirtEncoder</link>()&#32;:&#32;prev(0),&#32;ecount(0)&#32;{}
00049 &#32;&#32;&#32;&#32;
00050 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;======================&#32;SET&#32;======================</emphasis>
00051 
00057 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_virt_encoder_1ad161c0d2a29621731ff89d250ddd8a4f">setEncReverse</link>(<emphasis role="keywordtype">bool</emphasis>&#32;rev&#32;=&#32;<emphasis role="keyword">false</emphasis>)&#32;{
00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(rev)&#32;<link linkend="_class_virt_encoder_1aab174e7ed37b422a27192aedee8be977">set_encf</link>(E_REVERSE);
00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<link linkend="_class_virt_encoder_1a6bdb1a2dec10e1be3c14c3c49869ebab">clr_encf</link>(E_REVERSE);
00060 &#32;&#32;&#32;&#32;}
00061 
00067 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_virt_encoder_1aade2ae205e9ec50bed6d76ce3c0f33a9">setEncType</link>(uint8_t&#32;type&#32;=&#32;<link linkend="__virt_encoder_8h_1ab5c622eaea29916b55c4b2f8023cbbe3">EB_STEP1</link>)&#32;{
00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;flags&#32;=&#32;(flags&#32;&amp;&#32;0b11111100)&#32;|&#32;type;
00069 &#32;&#32;&#32;&#32;}
00070 
00078 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_virt_encoder_1a5d17150b3610b8978bdde0540c1e1c55">setEncISR</link>(<emphasis role="keywordtype">bool</emphasis>&#32;use=<emphasis role="keyword">true</emphasis>){
00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_virt_encoder_1aa729ee6d9919727d86a7eecd2f51e724">write_encf</link>(E_ISR,&#32;use);
00080 &#32;&#32;&#32;&#32;}
00081 
00089 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_virt_encoder_1ae8b27255ffb4264dd2ed1110c9926191">attach_right</link>(<link linkend="_utils_8h_1a4c528c24d8196164062904f004d96c84">cb_t</link>&#32;callback_func){
00090 <emphasis role="preprocessor">#ifndef&#32;EB_NO_CALLBACK&#x240D;</emphasis>
00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint8_t&#32;l_r&#32;=&#32;(<link linkend="_class_virt_encoder_1a1daa32206f3c108deb4aaad943f96fef">read_encf</link>(E_REVERSE))&#32;?&#32;1&#32;:&#32;0;
00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(callback_func&#32;==&#32;<emphasis role="keyword">nullptr</emphasis>&#32;||&#32;<link linkend="_class_virt_encoder_1a1d31ec913728966cf0ef6ca774c5cfe6">cb</link>[l_r])&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_virt_encoder_1a1d31ec913728966cf0ef6ca774c5cfe6">cb</link>[l_r]&#32;=&#32;*callback_func;
00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
00095 <emphasis role="preprocessor">#endif&#x240D;</emphasis>
00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
00097 &#32;&#32;&#32;&#32;}
00098 
00105 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_virt_encoder_1a96eb6f113c8af74ad511ee646f4159f4">attach_left</link>(<link linkend="_utils_8h_1a4c528c24d8196164062904f004d96c84">cb_t</link>&#32;callback_func){
00106 <emphasis role="preprocessor">#ifndef&#32;EB_NO_CALLBACK&#x240D;</emphasis>
00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint8_t&#32;l_r&#32;=&#32;(<link linkend="_class_virt_encoder_1a1daa32206f3c108deb4aaad943f96fef">read_encf</link>(E_REVERSE))&#32;?&#32;0&#32;:&#32;1;
00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(callback_func&#32;==&#32;<emphasis role="keyword">nullptr</emphasis>&#32;||&#32;<link linkend="_class_virt_encoder_1a1d31ec913728966cf0ef6ca774c5cfe6">cb</link>[l_r])&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_virt_encoder_1a1d31ec913728966cf0ef6ca774c5cfe6">cb</link>[l_r]&#32;=&#32;*callback_func;
00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
00111 <emphasis role="preprocessor">#endif&#x240D;</emphasis>
00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
00113 &#32;&#32;&#32;&#32;}
00114 
00115 &#32;&#32;&#32;&#32;<emphasis role="comment">//todo&#32;universal&#32;function</emphasis>
00116 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;void&#32;attach_call(){}</emphasis>
00117 
00121 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_virt_encoder_1a3a32f66b8b6888e75bb17e6ad88f12f0">detach_call</link>()&#32;{
00122 <emphasis role="preprocessor">#ifndef&#32;EB_NO_CALLBACK&#x240D;</emphasis>
00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_virt_encoder_1a1d31ec913728966cf0ef6ca774c5cfe6">cb</link>[0]&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_virt_encoder_1a1d31ec913728966cf0ef6ca774c5cfe6">cb</link>[1]&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
00125 <emphasis role="preprocessor">#endif&#x240D;</emphasis>
00126 &#32;&#32;&#32;&#32;}
00127 
00134 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_virt_encoder_1a5cb9dd003233ebe80ec7c8946492c961">initEnc</link>(<emphasis role="keywordtype">bool</emphasis>&#32;e0,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;e1)&#32;{
00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_virt_encoder_1a5cb9dd003233ebe80ec7c8946492c961">initEnc</link>(e0&#32;|&#32;(e1&#32;&lt;&lt;&#32;1));
00136 &#32;&#32;&#32;&#32;}
00137 
00143 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_virt_encoder_1a5cb9dd003233ebe80ec7c8946492c961">initEnc</link>(int8_t&#32;v)&#32;{
00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;prev&#32;=&#32;v;
00145 &#32;&#32;&#32;&#32;}
00146 
00150 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_virt_encoder_1a7a265f7e7e8758ef555fc42d6d23efd5">clear</link>()&#32;{
00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_virt_encoder_1a1daa32206f3c108deb4aaad943f96fef">read_encf</link>(E_TRN_R))&#32;<link linkend="_class_virt_encoder_1a6bdb1a2dec10e1be3c14c3c49869ebab">clr_encf</link>(E_TRN_R);
00152 &#32;&#32;&#32;&#32;}
00153 
00154 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;======================&#32;POLL&#32;======================</emphasis>
00155 
00161 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_virt_encoder_1a25ad5e989164bdf4d10a83a1057a0001">turn</link>()&#32;{
00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_virt_encoder_1a1daa32206f3c108deb4aaad943f96fef">read_encf</link>(E_TRN_R);
00163 &#32;&#32;&#32;&#32;}
00164 
00170 &#32;&#32;&#32;&#32;int8_t&#32;<link linkend="_class_virt_encoder_1abf07cf920815fecb1438b28a4c29f52d">dir</link>()&#32;{
00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_virt_encoder_1a1daa32206f3c108deb4aaad943f96fef">read_encf</link>(E_DIR)&#32;?&#32;1&#32;:&#32;-1;
00172 &#32;&#32;&#32;&#32;}
00173 
00182 &#32;&#32;&#32;&#32;<link linkend="_utils_8h_1a5522e17c74054cb11d1d67e4bdeca67e">EB_FLAGS_T</link>&#32;<link linkend="_class_virt_encoder_1a39814605b70ce60f2a27755571362b76">action</link>()&#32;{
00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(flags&#32;&amp;&#32;0b111111111)&#32;{
00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>(E_TRN_R&#32;|&#32;E_FAST):
00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;EB_TURN;
00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>(E_TRN_R&#32;|&#32;E_DIR&#32;|&#32;E_REVERSE):
00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;EB_TURN_L;
00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>(E_TRN_R&#32;|&#32;E_DIR):
00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;EB_TURN_R;&#32;&#32;&#32;
00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;EB_NONE;
00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00193 &#32;&#32;&#32;&#32;}
00194 
00202 &#32;&#32;&#32;&#32;int8_t&#32;<link linkend="_class_virt_encoder_1a80e335bb4c1af4f1e209a874df16beef">tickISR</link>(<emphasis role="keywordtype">bool</emphasis>&#32;e0,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;e1)&#32;{
00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_virt_encoder_1a80e335bb4c1af4f1e209a874df16beef">tickISR</link>(e0&#32;|&#32;(e1&#32;&lt;&lt;&#32;1));
00204 &#32;&#32;&#32;&#32;}
00205 
00212 &#32;&#32;&#32;&#32;int8_t&#32;<link linkend="_class_virt_encoder_1a80e335bb4c1af4f1e209a874df16beef">tickISR</link>(int8_t&#32;state)&#32;{
00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;state&#32;=&#32;<link linkend="_class_virt_encoder_1aa5dbe1eb7b590f4a97498a20e1b5542e">pollEnc</link>(state);
00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(state)&#32;{
00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_virt_encoder_1aab174e7ed37b422a27192aedee8be977">set_encf</link>(E_ISR_F);
00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_virt_encoder_1aa729ee6d9919727d86a7eecd2f51e724">write_encf</link>(E_DIR,&#32;state&#32;&gt;&#32;0);
00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;state;
00219 &#32;&#32;&#32;&#32;}
00220 
00228 &#32;&#32;&#32;&#32;int8_t&#32;<link linkend="_class_virt_encoder_1a47e4135d2e88ea6a2313977aa9307784">tick</link>(<emphasis role="keywordtype">bool</emphasis>&#32;e0,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;e1)&#32;{
00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_virt_encoder_1a47e4135d2e88ea6a2313977aa9307784">tick</link>(e0&#32;|&#32;(e1&#32;&lt;&lt;&#32;1));
00230 &#32;&#32;&#32;&#32;}
00231 
00238 &#32;&#32;&#32;&#32;int8_t&#32;<link linkend="_class_virt_encoder_1a47e4135d2e88ea6a2313977aa9307784">tick</link>(int8_t&#32;state)&#32;{
00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;state&#32;=&#32;<link linkend="_class_virt_encoder_1a91ed170018a12988260f3ab33c720bc5">tickRaw</link>(state);
00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(state)
00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00242 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#ifndef&#32;EB_NO_CALLBACK&#x240D;</emphasis>
00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_virt_encoder_1a1d31ec913728966cf0ef6ca774c5cfe6">cb</link>[0]&#32;&amp;&amp;&#32;state&#32;&lt;&#32;0)&#32;<link linkend="_class_virt_encoder_1a1d31ec913728966cf0ef6ca774c5cfe6">cb</link>[0]();
00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_virt_encoder_1a1d31ec913728966cf0ef6ca774c5cfe6">cb</link>[1]&#32;&amp;&amp;&#32;state&#32;&gt;&#32;0)&#32;<link linkend="_class_virt_encoder_1a1d31ec913728966cf0ef6ca774c5cfe6">cb</link>[1]();
00245 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif&#x240D;</emphasis>
00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;state;
00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_virt_encoder_1a7a265f7e7e8758ef555fc42d6d23efd5">clear</link>();
00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
00250 &#32;&#32;&#32;&#32;}
00251 
00257 &#32;&#32;&#32;&#32;int8_t&#32;<link linkend="_class_virt_encoder_1a47e4135d2e88ea6a2313977aa9307784">tick</link>()&#32;{
00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_virt_encoder_1a47e4135d2e88ea6a2313977aa9307784">tick</link>(-1);
00259 &#32;&#32;&#32;&#32;}
00260 
00268 &#32;&#32;&#32;&#32;int8_t&#32;<link linkend="_class_virt_encoder_1a91ed170018a12988260f3ab33c720bc5">tickRaw</link>(<emphasis role="keywordtype">bool</emphasis>&#32;e0,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;e1)&#32;{
00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_virt_encoder_1a91ed170018a12988260f3ab33c720bc5">tickRaw</link>(e0&#32;|&#32;(e1&#32;&lt;&lt;&#32;1));
00270 &#32;&#32;&#32;&#32;}
00271 
00279 &#32;&#32;&#32;&#32;int8_t&#32;<link linkend="_class_virt_encoder_1a91ed170018a12988260f3ab33c720bc5">tickRaw</link>(int8_t&#32;state)&#32;{
00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_class_virt_encoder_1a1daa32206f3c108deb4aaad943f96fef">read_encf</link>(E_ISR_F))&#32;{
00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_virt_encoder_1a6bdb1a2dec10e1be3c14c3c49869ebab">clr_encf</link>(E_ISR_F);
00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_virt_encoder_1aab174e7ed37b422a27192aedee8be977">set_encf</link>(E_TRN_R);
00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_virt_encoder_1abf07cf920815fecb1438b28a4c29f52d">dir</link>();
00284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((state&#32;&gt;=&#32;0)&#32;&amp;&amp;&#32;(state&#32;=&#32;<link linkend="_class_virt_encoder_1aa5dbe1eb7b590f4a97498a20e1b5542e">pollEnc</link>(state)))&#32;{
00286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_virt_encoder_1aa729ee6d9919727d86a7eecd2f51e724">write_encf</link>(E_DIR,&#32;state&#32;&gt;&#32;0);
00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_virt_encoder_1aab174e7ed37b422a27192aedee8be977">set_encf</link>(E_TRN_R);
00288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;state;
00289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
00291 &#32;&#32;&#32;&#32;}
00292 
00293 &#32;&#32;&#32;&#32;
00294 &#32;&#32;&#32;&#32;int8_t&#32;<link linkend="_class_virt_encoder_1a91ed170018a12988260f3ab33c720bc5">tickRaw</link>()&#32;{
00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_virt_encoder_1a91ed170018a12988260f3ab33c720bc5">tickRaw</link>(-1);
00296 &#32;&#32;&#32;&#32;}
00297 
00305 &#32;&#32;&#32;&#32;int8_t&#32;<link linkend="_class_virt_encoder_1aa5dbe1eb7b590f4a97498a20e1b5542e">pollEnc</link>(<emphasis role="keywordtype">bool</emphasis>&#32;e0,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;e1)&#32;{
00306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_virt_encoder_1aa5dbe1eb7b590f4a97498a20e1b5542e">pollEnc</link>(e0&#32;|&#32;(e1&#32;&lt;&lt;&#32;1));
00307 &#32;&#32;&#32;&#32;}
00308 
00315 &#32;&#32;&#32;&#32;int8_t&#32;<link linkend="_class_virt_encoder_1aa5dbe1eb7b590f4a97498a20e1b5542e">pollEnc</link>(int8_t&#32;state)&#32;{
00316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(prev&#32;!=&#32;state)&#32;{
00317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ecount&#32;+=&#32;((0x49941661&#32;&gt;&gt;&#32;((state&#32;|&#32;(prev&#32;&lt;&lt;&#32;2))&#32;&lt;&lt;&#32;1))&#32;&amp;&#32;0b11)&#32;-&#32;1;
00318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;prev&#32;=&#32;state;
00319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!ecount)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
00320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(flags&#32;&amp;&#32;0b11)&#32;{
00321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__virt_encoder_8h_1aeb2be3bd32d8e97a7d1cdd912896e414">EB_STEP4_LOW</link>:
00322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(state&#32;!=&#32;0b11)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;&#32;&#32;<emphasis role="comment">//&#32;skip&#32;00,&#32;01,&#32;10</emphasis>
00323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__virt_encoder_8h_1ac884883a546362d9ecce60cba2590128">EB_STEP4_HIGH</link>:
00325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(state)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;&#32;&#32;<emphasis role="comment">//&#32;skip&#32;01,&#32;10,&#32;11</emphasis>
00326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="__virt_encoder_8h_1a8f1e0ffc5b198284f3e41bb44819b4f4">EB_STEP2</link>:
00328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(state&#32;==&#32;0b10&#32;||&#32;state&#32;==&#32;0b01)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;&#32;&#32;<emphasis role="comment">//&#32;skip&#32;10&#32;01</emphasis>
00329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;state&#32;=&#32;((ecount&#32;&gt;&#32;0)&#32;^&#32;<link linkend="_class_virt_encoder_1a1daa32206f3c108deb4aaad943f96fef">read_encf</link>(E_REVERSE))&#32;?&#32;1&#32;:&#32;-1;
00332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ecount&#32;=&#32;0;
00333 <emphasis role="preprocessor">#ifndef&#32;EB_NO_COUNTER&#x240D;</emphasis>
00334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_virt_encoder_1a966668cc0a577818e294a4084b4dabea">counter</link>&#32;+=&#32;state;
00335 <emphasis role="preprocessor">#endif&#x240D;</emphasis>
00336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;state;
00337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
00339 &#32;&#32;&#32;&#32;}
00340 
00341 <emphasis role="preprocessor">#ifndef&#32;EB_NO_COUNTER&#x240D;</emphasis>
00342 &#32;&#32;&#32;&#32;int32_t&#32;<link linkend="_class_virt_encoder_1a966668cc0a577818e294a4084b4dabea">counter</link>&#32;=&#32;0;
00343 <emphasis role="preprocessor">#endif&#x240D;</emphasis>
00344 
00345 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;=====================&#32;PROTECTED&#32;=====================</emphasis>
00346 &#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>:
00347 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_virt_encoder_1aab174e7ed37b422a27192aedee8be977">set_encf</link>(<emphasis role="keyword">const</emphasis>&#32;uint16_t&#32;x)&#32;__attribute__((always_inline))&#32;{
00348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;flags&#32;|=&#32;x;
00349 &#32;&#32;&#32;&#32;}
00350 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_virt_encoder_1a6bdb1a2dec10e1be3c14c3c49869ebab">clr_encf</link>(<emphasis role="keyword">const</emphasis>&#32;uint16_t&#32;x)&#32;__attribute__((always_inline))&#32;{
00351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;flags&#32;&amp;=&#32;~x;
00352 &#32;&#32;&#32;&#32;}
00353 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_virt_encoder_1aa729ee6d9919727d86a7eecd2f51e724">write_encf</link>(<emphasis role="keyword">const</emphasis>&#32;uint16_t&#32;x,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;v)&#32;__attribute__((always_inline))&#32;{
00354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(v)&#32;<link linkend="_class_virt_encoder_1aab174e7ed37b422a27192aedee8be977">set_encf</link>(x);
00355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<link linkend="_class_virt_encoder_1a6bdb1a2dec10e1be3c14c3c49869ebab">clr_encf</link>(x);
00356 &#32;&#32;&#32;&#32;}
00357 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_virt_encoder_1a1daa32206f3c108deb4aaad943f96fef">read_encf</link>(<emphasis role="keyword">const</emphasis>&#32;uint16_t&#32;x)&#32;__attribute__((always_inline))&#32;{
00358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;flags&#32;&amp;&#32;x;
00359 &#32;&#32;&#32;&#32;}
00360 
00361 <emphasis role="preprocessor">#ifndef&#32;EB_NO_CALLBACK&#x240D;</emphasis>
00362 &#32;&#32;&#32;&#32;<link linkend="_utils_8h_1a4c528c24d8196164062904f004d96c84">cb_t</link>&#32;<link linkend="_class_virt_encoder_1a1d31ec913728966cf0ef6ca774c5cfe6">cb</link>[2]&#32;=&#32;{<emphasis role="keyword">nullptr</emphasis>,&#32;<emphasis role="keyword">nullptr</emphasis>};&#32;<emphasis role="comment">//&#32;callbacks&#32;for&#32;right&#32;and&#32;left&#32;turns</emphasis>
00363 <emphasis role="preprocessor">#endif&#x240D;</emphasis>
00364 
00365 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;=====================&#32;PRIVATE&#32;=====================</emphasis>
00366 &#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
00367 &#32;&#32;&#32;&#32;uint8_t&#32;flags&#32;=&#32;0;
00368 &#32;&#32;&#32;&#32;int8_t&#32;prev&#32;:&#32;4;
00369 &#32;&#32;&#32;&#32;int8_t&#32;ecount&#32;:&#32;4;
00370 }
</programlisting></section>
<anchor xml:id="__virt_encoder_8h_1a8a0d2d602acb24d74237c3f310e935cd"/><section>
    <title>X</title>
<indexterm><primary>X</primary><secondary>VirtEncoder.h</secondary></indexterm>
<indexterm><primary>VirtEncoder.h</primary><secondary>X</secondary></indexterm>
<para><computeroutput>#define X( a,  b)&#160;&#160;&#160;a = (1 &lt;&lt; b),</computeroutput></para><para>
Definition at line <link linkend="__virt_encoder_8h_source_1l00029">29</link> of file <link linkend="__virt_encoder_8h_source">VirtEncoder.h</link>.</para>
</section>
</section>
<section>
<title>Enumeration Type Documentation</title>
<anchor xml:id="__virt_encoder_8h_1ac38c7efc1dd08c024ddfe9a95c0be668"/><section>
    <title>ENC_FLAG_T</title>
<indexterm><primary>ENC_FLAG_T</primary><secondary>VirtEncoder.h</secondary></indexterm>
<indexterm><primary>VirtEncoder.h</primary><secondary>ENC_FLAG_T</secondary></indexterm>
<para><computeroutput>enum <link linkend="__virt_encoder_8h_1ac38c7efc1dd08c024ddfe9a95c0be668">ENC_FLAG_T</link></computeroutput></para><informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>ENC_FLAGS</primary><secondary>VirtEncoder.h</secondary></indexterm>
<indexterm><primary>VirtEncoder.h</primary><secondary>ENC_FLAGS</secondary></indexterm>
<anchor xml:id="__virt_encoder_8h_1ac38c7efc1dd08c024ddfe9a95c0be668a1a93281d355333e187e376ea04b25e92"/>ENC_FLAGS</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
<para>
Definition at line <link linkend="__virt_encoder_8h_source_1l00030">30</link> of file <link linkend="__virt_encoder_8h_source">VirtEncoder.h</link>.</para>
<programlisting linenumbering="unnumbered">00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00031 &#32;&#32;&#32;&#32;<link linkend="__virt_encoder_8h_1a1ce8742512126ac149fbf10fe9470179">ENC_FLAGS</link>
00032 }&#32;<link linkend="__virt_encoder_8h_1ac38c7efc1dd08c024ddfe9a95c0be668">ENC_FLAG_T</link>;
</programlisting></section>
</section>
</section>
